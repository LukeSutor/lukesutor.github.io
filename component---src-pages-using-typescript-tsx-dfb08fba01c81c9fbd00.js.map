{"version":3,"file":"component---src-pages-using-typescript-tsx-dfb08fba01c81c9fbd00.js","mappings":"qOAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECtBX,MAjBeT,IAAA,IAAC,UAAEU,GAAWV,EAAA,OAC3BH,EAAAA,cAAA,UAAQc,UAAU,uCAChBd,EAAAA,cAAA,OAAKc,UAAU,2FACbd,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,IAAIE,UAAU,mBAAkB,oBAGzCd,EAAAA,cAAA,OAAKc,UAAU,wCACbd,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,gBAAe,iBACxBZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,gBACtBZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,UAAUG,IAAI,aAAaC,OAAO,UAAS,eAKjD,ECUX,MAhBeb,IAAmB,IAAlB,SAAEc,GAAUd,EAC1B,OACEH,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACkB,EAAM,CAACL,UAAW,eACnBb,EAAAA,cAAA,OAAKc,UAAU,OACbd,EAAAA,cAAA,YAAOiB,GACPjB,EAAAA,cAAA,UAAQc,UAAU,SAChBd,EAAAA,cAAA,KAAGc,UAAU,sEACV,IAAIK,MAAOC,cAAc,4BAI/B,C,+CCqBP,IAlCA,SAAYjB,GAAoC,IAADkB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAErB,EAAK,SAAEe,GAAUd,EAC3C,MAAM,KAAEK,IAASgB,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBF,GAAef,EAAKkB,aAAaH,YACnDI,EAAgC,QAApBN,EAAGb,EAAKkB,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBnB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ2B,EAAe,GAAGzB,OAAWyB,IAAiBzB,GACtDF,EAAAA,cAAA,QAAM4B,KAAK,cAAcC,QAASJ,IAClCzB,EAAAA,cAAA,QAAM8B,SAAS,WAAWD,QAAS3B,IACnCF,EAAAA,cAAA,QAAM8B,SAAS,iBAAiBD,QAASJ,IACzCzB,EAAAA,cAAA,QAAM8B,SAAS,UAAUD,QAAQ,YACjC7B,EAAAA,cAAA,QAAM4B,KAAK,eAAeC,QAAQ,YAClC7B,EAAAA,cAAA,QAAM4B,KAAK,kBAAkBC,SAA0B,QAAjBP,EAAAd,EAAKkB,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBS,SAAU,KACnE/B,EAAAA,cAAA,QAAM4B,KAAK,gBAAgBC,QAAS3B,IACpCF,EAAAA,cAAA,QAAM4B,KAAK,sBAAsBC,QAASJ,IACzCR,EAGP,C","sources":["webpack://luke-sutor-personal-website/./src/pages/using-typescript.tsx","webpack://luke-sutor-personal-website/./src/components/header.js","webpack://luke-sutor-personal-website/./src/components/layout.js","webpack://luke-sutor-personal-website/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"w-full px-4 lg:px-16 py-6 shadow-sm\">\n    <div className=\"flex justify-center lg:justify-between w-full max-w-screen-xl mx-auto whitespace-nowrap\">\n      <Link to=\"/\" className=\"hidden lg:block\">\n        Luke Sutor üë®‚Äçüíª\n      </Link>\n      <div className=\"flex flex-row items-center space-x-8\">\n        <Link to=\"/#experience\">Experience üìö</Link>\n        <Link to=\"/#projects\">Projects üõ†Ô∏è</Link>\n        <Link to=\"/resume\" rel=\"noreferrer\" target=\"_blank\">\n          Resume üìÑ\n        </Link>\n      </div>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header siteTitle={\"Luke Sutor\"} />\n      <div className=\"m-0\">\n        <main>{children}</main>\n        <footer className=\"mt-24\">\n          <p className=\"text-sm lg:text-base ml-auto mr-8 lg:mr-4 w-min whitespace-nowrap\">\n            {new Date().getFullYear()} &middot; Built by Luke Sutor\n          </p>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","className","rel","target","children","Header","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}